#!/usr/bin/env node

require('console-stamp')(console, '[dd/mm HH:MM:ss.l]');
const dotenv = require('dotenv').config();
const debug = require('debug')('taktwebserver:server');

const app = require('../app');
const http = require('http');
const server = http.createServer(app);

const PORT = process.env.PORT || process.env.DEV_PORT;

const andonControl = require('../andonControl');
const socket = require('../socket.js');
const plc = require('../plc/plc');


app.set('port', PORT);

plc.connect();
socket.start(server);
andonControl.start();

server.listen(PORT);
server.on('error', onError);
server.on('listening', onListening);

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }
  switch (error.code) {
    case 'EACCES':
      console.error(PORT, ' requires elevated privileges');
      plc.disconnect();
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(PORT, ' is already in use');
      plc.disconnect();
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}

// process.on('SIGINT', function () {
//   console.log("Caught interrupt signal");
//   plc.disconnect();
//   process.exit(1);
// });


